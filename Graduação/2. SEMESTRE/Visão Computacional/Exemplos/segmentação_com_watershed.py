# -*- coding: utf-8 -*-
"""Segmentação com Watershed.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17RGtjq1Ysyg1yZQWRJBYAbWazN-D24CI
"""

!pip install opencv-python

import cv2

import matplotlib.pyplot as plt

import numpy as np

from google.colab.patches import cv2_imshow

from skimage import data, filters, measure, morphology

img = cv2.imread('/content/drive/MyDrive/Colab Notebooks/Alevinos_4.png')
cv2_imshow(img)

gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
thresh = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY_INV | cv2.THRESH_OTSU)[1]
cv2_imshow(thresh)

filtro = cv2.pyrMeanShiftFiltering(img, 20, 40)
cv2_imshow(filtro)

gray = cv2.cvtColor(filtro, cv2.COLOR_BGR2GRAY)
thresh = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY_INV | cv2.THRESH_OTSU)[1]
cv2_imshow(thresh)

from scipy import ndimage

dist = ndimage.distance_transform_edt(thresh)
plt.imshow(dist)

from skimage.feature import peak_local_max
local_max = peak_local_max(dist, indices=False, min_distance=16, labels=thresh)

markers = ndimage.label(local_max, structure=np.ones((3,3)))[0]

from skimage.segmentation import watershed
labels = watershed(-dist, markers, mask=thresh)

print("Alevinos encontrados: {}".format(len(np.unique(labels)) - 1))

